{"version":3,"sources":["../../../node_modules/.pnpm/classnames@2.3.2/node_modules/classnames/index.js","../src/button/button.tsx","../src/input/input.tsx"],"names":["require_classnames","__commonJSMin","exports","module","hasOwn","nativeCodeString","classNames","classes","i","arg","argType","inner","key","import_classnames","React","Button","props","text","disabled","className","rest","cx","button_default","forwardRef","useId","useState","useImperativeHandle","useRef","Input","ref","title","error","titleClassName","schema","type","onChange","onBlur","onFocus","errorClassName","isValid","setIsValid","isFocus","setIsFocus","id","inputRef","handleChange","e","value","handleBlur","handleFocus","input_default"],"mappings":"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","sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","ï»¿import React, {\r\n  type FC,\r\n  type ButtonHTMLAttributes,\r\n  type DetailedHTMLProps,\r\n} from \"react\";\r\nimport cx from \"classnames\";\r\n\r\ninterface Props\r\n  extends DetailedHTMLProps<\r\n    ButtonHTMLAttributes<HTMLButtonElement>,\r\n    HTMLButtonElement\r\n  > {\r\n  text: string;\r\n}\r\n\r\nconst Button: FC<Props> = (props) => {\r\n  const { text, disabled, className, ...rest } = props;\r\n  return (\r\n    <button\r\n      disabled={disabled}\r\n      className={cx(\r\n        \"group relative inline-flex transition ease-in-out rounded self-center bg-ctw_secondary dark:bg-ctw_primary\",\r\n        className\r\n      )}\r\n      {...rest}>\r\n      <span\r\n        className={cx(\r\n          \"ctw-component-button-secondary transform text-base\",\r\n          disabled\r\n            ? \"text-gray-400 cursor-not-allowed\"\r\n            : \"group-hover:-translate-x-1 group-hover:-translate-y-1\"\r\n        )}>\r\n        {text}\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, {\r\n  forwardRef,\r\n  useId,\r\n  useState,\r\n  type ChangeEvent,\r\n  type FocusEvent,\r\n  type DetailedHTMLProps,\r\n  type InputHTMLAttributes,\r\n  useImperativeHandle,\r\n  useRef,\r\n} from \"react\";\r\nimport { ZodType } from \"zod\";\r\nimport cx from \"classnames\";\r\n\r\ninterface Props\r\n  extends DetailedHTMLProps<\r\n    InputHTMLAttributes<HTMLInputElement>,\r\n    HTMLInputElement\r\n  > {\r\n  title?: string;\r\n  error?: string;\r\n  titleClassName?: string;\r\n  errorClassName?: string;\r\n  schema?: ZodType<any>;\r\n}\r\n\r\ninterface InputRef {\r\n  getValidity: () => boolean;\r\n  getNativeInput: () => HTMLInputElement;\r\n}\r\n\r\nconst Input = forwardRef<InputRef, Props>((props, ref) => {\r\n  const {\r\n    title,\r\n    error,\r\n    titleClassName,\r\n    schema,\r\n    type = \"text\",\r\n    className,\r\n    onChange,\r\n    onBlur,\r\n    onFocus,\r\n    errorClassName,\r\n    ...rest\r\n  } = props;\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [isFocus, setIsFocus] = useState(false);\r\n  const id = useId();\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    getValidity: () => {\r\n      if (schema) return isValid;\r\n      return true;\r\n    },\r\n    getNativeInput: () => {\r\n      return inputRef.current as HTMLInputElement;\r\n    },\r\n  }));\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (schema) {\r\n      const { value } = e.target;\r\n      setIsValid(schema.safeParse(value).success);\r\n    }\r\n    onChange && onChange(e);\r\n  };\r\n\r\n  const handleBlur = (e: FocusEvent<HTMLInputElement>) => {\r\n    setIsFocus(false);\r\n    onBlur && onBlur(e);\r\n  };\r\n\r\n  const handleFocus = (e: FocusEvent<HTMLInputElement>) => {\r\n    setIsFocus(true);\r\n    onFocus && onFocus(e);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label className={titleClassName} htmlFor={`${id}-input`}>\r\n        {title ?? \"\"}\r\n      </label>\r\n      <input\r\n        ref={inputRef}\r\n        id={`${id}-input`}\r\n        onChange={handleChange}\r\n        type={type}\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlur}\r\n        className={cx(\r\n          \"border-[#CBD2D7] w-full rounded-lg ctw-component-border-primary transition ease-in-out focus:outline-none ctw-component-bg-primary\",\r\n          !isValid &&\r\n            \"border-ctw_danger hover:cursor-not-allowed dark:border-ctw_danger dark:hover:cursor-not-allowed\",\r\n          isFocus && isValid && \"border-ctw_primary dark:border-ctw_primary\",\r\n          className\r\n        )}\r\n        {...rest}\r\n      />\r\n      {!isValid && (\r\n        <p className={cx(\"text-ctw_danger\", errorClassName)}>{error ?? \"\"}</p>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nInput.displayName = \"Input\";\r\n\r\nexport { type InputRef };\r\nexport default Input;\r\n"]}